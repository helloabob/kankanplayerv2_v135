package com.bo.elements {	import flash.display.Sprite;	import flash.display.Loader;	import flash.events.Event;	import flash.net.URLRequest;	import flash.text.TextField;	import flash.events.MouseEvent;	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.net.navigateToURL;	import flash.text.TextFormat;	import flash.text.TextFormatAlign;	import flash.events.IOErrorEvent;		public class EndPanelItem extends Sprite{		var imageurl:String;		var title:String;		var ld:Loader;		var titlesp:Sprite;		var imagesp:Sprite;		var txt:TextField;		var mywidth:Number;		var myheigth:Number;		var timer:Timer=new Timer(50);		var sh:Boolean=false;   //true:show   false:hide		private var link:String;		private var tf:TextFormat=new TextFormat();		public function EndPanelItem(nw:Number,nh:Number) {			// constructor code			mywidth=nw;			myheigth=nh;			titlesp=new Sprite();			titlesp.graphics.beginFill(0x000000,0);			titlesp.graphics.drawRect(0,0,mywidth,myheigth);			titlesp.graphics.endFill();			txt=new TextField();			txt.width=mywidth;			txt.height=50;			txt.textColor=0xffffff;			txt.wordWrap=true;			txt.y=myheigth/2-txt.height/2;			tf.align=TextFormatAlign.CENTER;			txt.setTextFormat(tf);			txt.defaultTextFormat=tf;			titlesp.addChild(txt);			//titlesp.visible=false;			addChild(titlesp);						imagesp=new Sprite();			imagesp.graphics.beginFill(0x000000,0);			imagesp.graphics.drawRect(0,0,mywidth,myheigth);			imagesp.graphics.endFill();			imagesp.addEventListener(MouseEvent.ROLL_OVER,onImageOver);			imagesp.addEventListener(MouseEvent.ROLL_OUT,onImageOut);			addChild(imagesp);						timer.addEventListener(TimerEvent.TIMER,onTimer);						addEventListener(MouseEvent.CLICK,onLink);					}		private function onLink(evt:MouseEvent):void{			navigateToURL(new URLRequest(link),"_blank");		}		public function set Link(val:String):void{			link=val;		}		private function onTimer(evt:TimerEvent):void{			if(!sh){				if(imagesp.alpha==0){					timer.reset();				}else{					imagesp.alpha-=0.1;				}			}else{				if(imagesp.alpha==1){					timer.reset();				}else{					imagesp.alpha+=0.1;				}			}		}		private function onImageOver(evt:MouseEvent):void{			//trace('over');			//imagesp.alpha=0;			timer.reset();			sh=false;			timer.start();		}		private function onImageOut(evt:MouseEvent):void{			//trace('out');			timer.reset();			//sh=true;			//timer.start();			imagesp.alpha=1;		}		public function set Title(val:String):void{			title=val;			txt.text=title;		}		public function set ImageURL(url:String):void{			imageurl=url;			ld=new Loader();			ld.contentLoaderInfo.addEventListener(Event.COMPLETE,onComplete);			ld.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR,onerror);			ld.load(new URLRequest(imageurl));		}		private function onerror(evt:IOErrorEvent):void{			ld.contentLoaderInfo.removeEventListener(Event.COMPLETE,onComplete);			ld.contentLoaderInfo.removeEventListener(IOErrorEvent.IO_ERROR,onerror);			dispatchEvent(new Event(Event.COMPLETE));		}		private function onComplete(evt:Event):void{			ld.contentLoaderInfo.removeEventListener(Event.COMPLETE,onComplete);			ld.contentLoaderInfo.removeEventListener(IOErrorEvent.IO_ERROR,onerror);			ld.width=mywidth;			ld.height=myheigth;			imagesp.addChild(ld);			dispatchEvent(new Event(Event.COMPLETE));		}	}	}