package com.bo.net {	import com.bo.events.MyEvent;	import com.bo.utils.XMLParser;	import com.debugTip.DebugTip;		import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.events.SecurityErrorEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;
		public class VXMLloader{		private var url:String;		private var urlloader:URLLoader;		public function VXMLloader() {			// constructor code		}		public function loadxml():void{			if(Global.xmlid.indexOf("/")==0)Global.xmlid=Global.xmlid.substr(1);			if(Global.xmlid.indexOf("http")==0)url=Global.xmlid;			else url=Address.XMLBASEPATH+Global.xmlid+".xml?t="+ int(Math.random() * 100000000);			DebugTip.instance.log("=======vxmlXml:"+url);			//http://www.kankanews.com/vxml/2011-11-13/571197.xml?t=82556269			urlloader=new URLLoader();			urlloader.addEventListener(Event.COMPLETE,onxmlcomplete);			urlloader.addEventListener(IOErrorEvent.IO_ERROR,onIOError);			urlloader.addEventListener(SecurityErrorEvent.SECURITY_ERROR,onIOError);			urlloader.load(new URLRequest(url));		}		private function onxmlcomplete(evt:Event):void{			urlloader.removeEventListener(Event.COMPLETE,onxmlcomplete);			urlloader.removeEventListener(IOErrorEvent.IO_ERROR,onIOError);			urlloader.removeEventListener(SecurityErrorEvent.SECURITY_ERROR,onIOError);			XMLParser.parseXML(new XML(urlloader.data));			Global.notificationCenter.postEvent(new MyEvent(MyEvent.POSTEVENT,MyEvent.VXMLCOMPLETE));		}		private function onIOError(evt:Event):void{			DebugTip.instance.log("----------security error on vmsloader");			urlloader.removeEventListener(Event.COMPLETE,onxmlcomplete);			urlloader.removeEventListener(IOErrorEvent.IO_ERROR,onIOError);			urlloader.removeEventListener(SecurityErrorEvent.SECURITY_ERROR,onIOError);			Global.notificationCenter.postEvent(new MyEvent(MyEvent.POSTEVENT,MyEvent.VXMLERROR));		}	}	}